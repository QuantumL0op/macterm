
                       How to Test MacTerm             2008-03-22

OVERVIEW
  To be perfectly honest, automated testing is a huge hole in the
  project right now.  Tests are available though (see below).
  The Python API may make this easier in the future.

COMPILED-IN UNIT TESTS
  The source in Build/Application/Code/Initialize.* contains a
  preprocessor definition "RUN_MODULE_TESTS".  If set to 1, the
  unit tests for certain modules will be compiled-in and run at
  application startup time, reporting results to standard output.
  (Run these only after changing a well-established component.)

PYTHON MODULE TESTS
  Source files implemented entirely in Python, found in folders
  named "PythonCode", generally support standard Python doctests
  completely.  If a module file has been made executable, you can
  simply "run" the file to invoke all of its doctests.
  
  Keep in mind that if a Python module depends on Quills, it will
  also depend on compiled libraries, and therefore is easiest to
  run within the main script (MacTerm.app/Contents/MacOS/...)
  where library environment variables are already set correctly.

TERMINAL TESTS
  The popular testing program "vttest" is strongly recommended;
  this is easy to Google and compile yourself.  It contains many
  very useful and thorough tests of VT100/ANSI, VT100/VT52,
  VT102, VT220, XTerm, and more.  Another source of tests is the
  "tack" program.
  
  It is also generally a good idea to test popular and complex
  programs such as the mail program "alpine", text editors, and
  games.

GRAPHICAL USER INTERFACE TESTS
  It is theoretically possible to use AppleScript or a modern
  version of Xcode to automate GUI actions.  MacTerm does not use
  these right now; I just click on things myself until I cause a
  crash. :)

                                        Kevin Grant (kmg@mac.com)
                                        Lead Developer, MacTerm
