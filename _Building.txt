
                      How to Build MacTerm             2009-09-03

PREREQUISITES
  The latest version of Mac OS X should be used to build.  On the
  other hand, the project currently does not support Xcode 4.x so
  an Xcode 3.x installation is preferable.  Xcode can be anywhere
  but see "Build/GNUmakefile" for a variable that determines
  where the build looks for development tools.
  
  MacTerm expects to compile against the 10.6 SDK.  Recent Mac
  development environments may only include the 10.7 SDK and
  require a separate download of the 10.6 SDK.
  
  By default MacTerm compiles in support for Growl notifications
  (http://www.growl.info/) so a default build requires the SDK
  from that site.  It is expected to exist in a directory named
  "GrowlSDK" under the "Build" directory (for this reference and
  other dependencies, see "Build/Shared/CustomPaths.xcconfig").
  If you wish to disable Growl support you may do so by invoking
  the Build/GNUmakefile directly but you cannot easily do this
  when building from Xcode.
  
  MacTerm is implemented as a C++ framework that is loaded into
  Python.  This is accomplished with the Simple Wrapper Interface
  Generator (SWIG), which you must download and build separately;
  look at "Build/Tools/SwigConfig.sh".  The latest version of
  SWIG is recommended (the 2.x series was tested recently).  See
  "Build/Shared/CustomPaths.xcconfig" for a variable that sets
  the install path (/opt/swig-<version>/bin/swig by default).
  
  When building source code documentation only, you will need
  Doxygen (http://www.doxygen.org/), and Dot (part of GraphViz,
  http://www.graphviz.org/).  Also, doxypy for the Quills API
  documentation is recommended (http://code.foosel.org/doxypy).

UNDERSTANDING THE DIRECTORY STRUCTURE
  The components of the project are in a few main folders:
    Licenses/
        Source code licenses.  Please see _Licenses.txt.
    Build/
        Source code for all components and documentation, and the
        scripts required to build them.  The top level has Xcode
        projects and/or build scripts for each component.  In
        addition, files used by more than one component are in
        Build/Shared/.
    Debug/
        Scripts that simplify MacTerm debugging.

HOW TO BUILD
  The MacTerm.app bundle is constructed using a makefile, since
  it has an unusual file layout.  However, Xcode is still called
  by the makefile to do builds and cleans; so if a build was
  initiated from the GUI, those results will be used by "make".
  
  There are a few ways to do builds, and they are equivalent:
  - Use "Build/Application.xcodeproj".  The "Everything" target
    just runs the makefile to create the entire bundle.  You can
    build components separately to save time during development.
  - Run "Build/_MacTermBuild.command" from the Finder.
  - Run "make" from the Build directory, in a shell window.  If
    you build in this way, your environment or command line can
    include settings that customize the build.
  
  You can clean in the usual ways (i.e. the Clean command on the
  "Everything" target, or "make clean").
  
  IMPORTANT: The build system currently will only rebuild the
  entire Python wrapper when the SWIG file "Quills.i" is changed.
  However, that is NOT the only file that affects the wrapper: in
  particular, if you ever change Quills*.{cp,h}, you should also
  "touch" Quills.i so that the wrapper is rebuilt with your
  changes.

HOW TO CUSTOMIZE THE BUILD
  It is possible to tweak the makefile or environment to change
  what is built.
  
  Run "make help" from the Build directory to see options that
  can be tweaked through the command line.  Other settings may
  require GNUmakefile edits or changes to the .xcconfig files.

                                        Kevin Grant (kmg@mac.com)
                                        Lead Developer, MacTerm
