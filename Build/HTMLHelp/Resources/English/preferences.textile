<div class="navigation">

* MacTELNET Help
* "Home":../index.html

</div>

h1(pagetitle). Preferences

<div class="content">
<a name="helpwithpreferences"></a><!-- must use this exact tag; see ExactMatch.kv -->

This page is arranged in the same categories as those in the
MacTelnet Preferences window.  To access any of the settings
mentioned here, start by choosing the "Preferences..." item in
the MacTelnet menu.

* "General":#general
* "Sessions":#sessions
* "Terminals":#terminals
* "Formats":#formats
* "Macros":#macros
* "Translations":#translations
* "Full Screen":#fullscreen
* "Scripts":#scripts

h2(#general). General

h3(#generaloptions). Options

h4. Menus and Windows

h5(#simplify). Simplified user interface

Hides commands and portions of windows that are not frequently
needed.

h5(#noautoclose). No window close on process exit

Prevents a window from closing when the process running inside it
has quit.

h5(#noautonew). No automatic new windows

Prevents a new session from being created at startup, or when the
application is activated and no windows are open.

Note that the type of session created will implicitly match the
"Command-N Key Equivalent" preference.

h5(#usetabs). Use tabs to arrange windows

Once enabled, all new windows (but not existing ones) will be
given tab adornments and will stick together automatically.

New windows are added to the tab group of the active window.
A tab can be moved to a new group by clicking the up-arrow
button on its tab, or using Window >> Move to New Workspace.

**Tip:** If you're using more than one display, or Spaces, it
is handy to have a tab group for each space.

It is important to notice that MacTelnet tabs are normal
windows, so they are independent and can be modified in the
usual ways.  The _only_ exception is that all the windows in
the group will move together.

If a sheet is open on one tab, you can still reach other tabs
by clicking on them with the mouse.

You can also drag and drop between tabs: simply move the mouse
over a tab to activate its window.

h4. Text

h5(#invert). Invert selected text

Uses high contrast colors for text selections instead of trying
to create a blend with the current window color scheme.

h5(#autocopy). Automatically Copy selected text

Whenever new text is highlighted, it is copied to the Clipboard.
This is how Unix-like systems behave, and may be how you are
accustomed to working with terminal-based applications.

h5(#dropmove). Move cursor to text drop location

Displays a ghost terminal cursor during drags, and sends a series
of arrow key sequences to move the cursor when the drag ends.

When terminal applications properly respond to the sequences, the
result is effectively to give them Mac-like drag-and-drop!

However, not all terminal applications properly respond to arrow
key sequences.  The typical error is to display various "garbage"
characters instead of moving the cursor.

h5(#nodim). Don't dim background terminal text

To help emphasize the active terminal, MacTelnet alters the color
hues of background windows.  Use this option to quell recoloring.

h4. Keyboard

h5(#menukeys). Menu item key equivalents

Disabling the key equivalents for all menu items is recommended
when in kiosk (Full Screen) mode, or whenever it is necessary to
use keys from menu commands as input to the application in the
active terminal.

h5(#mapbackquote). Treat backquote key like Escape

On many keyboards, the backquote key is in a location similar to
or identical to the location of the Esc key on other keyboards.
Some users may wish to treat backquote keypresses as if they were
escape keypresses for this reason, especially if using something
that relies heavily on Esc such as the "vi" text editor.

Note, however, that Unix shells and other applications may
require use of a backquote.

h5(#focusfollowsmouse). Focus follows mouse

Allows you to type into any terminal without bringing its window
to the front; you simply point at the terminal with the mouse
before typing.  This is the way many window managers behave on
Unix-like systems.

h3(#generalspecial). Special

h4. Terminal Cursor

h5(#cursorshape). Shape

MacTelnet allows one of 5 different shapes for the terminal
cursor; a solid square is typical, but you may wish to have the
standard Mac vertical bar, a horizontal underline, or thicker
versions of either (more noticeable on LCD displays).

h5(#cursorflash). Flash

The cursor blinks on and off periodically when Flash is set,
which may make it easier to see.  But, see also the Find Cursor
command in the Edit menu, which locates the cursor on demand.

h4(#stackorigin). Window Stacking Origin

You can specify the location on the screen where the first
MacTelnet window is placed.  Subsequent windows automatically
stack diagonally.  Note that if you save a session or an entire
workspace, window locations are preserved and ignore this origin.

h4(#spacesfortab). Window Resize Effect

When window resizes affect terminal screen size, MacTelnet
dynamically calculates the maximum number of rows and columns
that can fit in the current window size (at current font size).

When window resizes affect text size, MacTelnet dynamically
calculates the maximum font size that can be used (in the current
terminal font) to fit the current number of rows and columns in
the current window size.

You can hold down the Option key prior to starting a window
resize to temporarily switch this preference.

h4(#spacesfortab). Copy With Tab Substitution

When copying text using Copy with Tab Substitution, this number
determines how many consecutive spaces are replaced with a single
tab character before putting the text on the clipboard.

h4(#commandN). Command-N Key Equivalent

MacTelnet has several ways to create sessions, and you may wish
to use one of them more than others.  You can map command-N as a
short-cut to whichever one you use most.  This also implicitly
determines the behavior of any automatically-opened windows (such
as, at startup time).

h3(#generalnotification). Notification

h4. Terminal Bell

h5. Sound

When a terminal audio event occurs, you can have MacTelnet ignore
it, or play the standard system beep, or any other library sound.

The set of sounds in the menu is defined the first time the
Preferences window opens, based on the contents of any Sounds
folders found in /System/Library, /Library, or the Library folder
of your Home folder.

Note that sound can also be controlled in individual terminals by
using the "Bell" command in the Terminal menu (or the
corresponding toolbar item).

h5(#visualbell). Always use visual bell

If a terminal window is not active, any bell events from the
window (regardless of sound settings) will include a visual flash
to show you which window the bell came from.

However, you can choose to enable visuals all the time, in which
case even active terminals will flash when bells occur.

h5(#marginbell). Margin bell

Not implemented.  But it will eventually, if enabled, generate a
terminal bell event if you are typing and the cursor passes into
the last 5 columns of the display.

h5(#notifybeeps). Background notification on bell

If MacTelnet is not the active application, you can ask that you
receive special notification from the OS when one of your
terminals generates a bell.

h4(#notifymethod). Background Notification

For "Background notification on bell", as well as any other alert
that may show up when you are in another application (such as an
error message), you can specify how "annoying" MacTelnet may be.
The options range from no interruptions at all, to an immediate
alert in your other application telling you that MacTelnet needs
your attention.

h2(#sessions). Sessions

bq. You can create more than one set of preferences in
this category.  When you select the icon, a drawer
appears with all the collections you have.  Simply
choose a name from the list in the drawer, and then
edit that collection's settings in the main Preferences
window.

Sessions are a little like Bookmarks from your web browser.

These collections specify how to access a resource (typically a
local or remote terminal application).  They are also used to
define key mappings, set up vector graphics, and precisely
control data transfers.

Note that MacTelnet can also save session details to files with
File >> Save As, though the files do not contain as many details
as Preferences do.

h3(#sessionresource). Resource

h4. Terminal

Specifies the Terminals collection that will be used to set up
the emulator for the session terminal window.  Most of the
terminal settings can be changed while the session is running, by
using the Terminal menu.

In Unix sessions, you typically will set a "TERM" environment
variable that is consistent with the Terminal setting.

h4. Remote Only

These fields are only required when connecting to a server, and
can be left blank if your Resource is a local Unix command.

Note also that editing fields in this section will overwrite the
Unix command line portion of the panel.

h5. Protocol

A protocol determines the local command that MacTelnet uses to
establish the connection.  This also determines how secure the
connection is, and the purpose of the connection (for instance,
FTP connections are only for uploading and downloading files).

The target host must be running a server accepting connections
for the protocol you choose.

h5. Host

The domain name or IP address (version 4 or version 6) of the
server you want to connect to.

Storing IP addresses is not recommended, because addresses are
usually changed more frequently than domain names.  On the other
hand, not all servers have domain names.

You can use Look Up to test a domain name, which will replace
the name with its current IP address (version 6, if available).

h5. Port

Since more than one server can be running on a computer, the port
number specifies which one you want.

Usually, you can rely on the port number that is automatically
chosen when you select a Protocol.

h5. User ID

You can choose to remember the user identification that is
requested by the server each time you connect.

MacTelnet does not remember passwords for you.  You will be
prompted for a password when you connect, if the server requires
one.

h4. Command Line

A Resource is actually defined entirely by its command line
field.  For local Unix commands, just type in whatever you want
to run.

For remote sessions, you will notice that the command line was
already defined for you, as you edited the Remote Sessions Only
fields.  Advanced users can further edit this command line if
necessary.

It is important to note that MacTelnet splits this line into
words (on whitespace), and does not interpret *any* characters:
not even those common to Unix shells like "~", "|" and ">".  If
you want to run a more complex command, you can save it in a
script for the target shell, and ask MacTelnet to run the script.

h3(#sessiondataflow). Data Flow

h4. Translation

Specifies the Translations collection that will be initially used
to interpret text in the session.

In Unix sessions, you typically will set a "LANG" environment
variable that is consistent with the Translation setting.

h4. Duplication

MacTelnet can send keyboard characters directly to the terminal
as it transmits them to a session; this is known as Local Echo.

Local Echo is useful for slow connections, because it displays
what you type immediately instead of waiting for a server
response.  (The floating Command Line in MacTelnet gives a
similar benefit; see the Window menu.)

There are downsides to echoing, that basically boil down to how
well the session and MacTelnet agree.  When half-duplex, the
server does not send back what you type; so you cannot be sure
if it was received, even if it _looks_ right in your terminal.
When full-duplex, you do see confirmation from the server, but
technically it is sending back redundant text and will cause the
same information to appear twice in the local terminal.

h4. Paste Buffering

When you use Paste for a large amount of text, the session may
not be prepared to receive that much data at once; this can cause
problems, like losing or garbling some of the characters.

MacTelnet allows you to locally buffer Paste on a per-session
basis.  This means that MacTelnet does not send all text at once,
it splits the data into small chunks and sends each piece
separately.

h4. Capture to File

You can choose to automatically capture this session to a
specific file when it starts.  Note also that this can be done
from a menu, File >> Begin Capture to File.

Currently, MacTelnet does not have sophisticated ways to handle
automatic file captures.  It would be nice, for instance, if
successive sessions could use new files in a target folder and
not overwrite the same file.

h3(#sessioncontrolkeys). Keyboard

You can map certain key combinations to special behaviors that
allow control over applications and data flow.

Usually the default mappings are sufficient, however there are
notable Unix applications (like "pine" and "EMACS") that may need
to use the default control-key mappings for something else.

Note also that the Control Keys palette allows you to enter _any_
control key at any time, regardless of key mappings.  See the
Window menu.

h4. Process Control

h5. Interrupt Process

Defaults to control-C (^C), the key sequence that will cause the
application in a terminal to quit immediately if possible.

This is also in the menu bar, Terminal >> Interrupt Process.

h4. Flow Control

h5. Suspend (Scroll Lock / XOFF)

Defaults to control-S (^S), the key sequence that will cause a
scroll lock (also known as XOFF, or "suspend transmission", or
sending a stop signal to a Unix process).

While suspended, no new text will appear in the terminal even
though the session remains active.  This can be useful to pause
rapidly-scrolling displays.

This is also in the menu bar, Terminal >> Suspend (Scroll Lock),
and is available as a toolbar item.

h5. Resume (XON)

Defaults to control-Q (^Q), the key sequence that will cause a
scroll unlock (also known as XON, or "resume transmission", or
sending a start signal to a Unix process).

A Resume is like an Undo for a Suspend.

This is also in the menu bar, Terminal >> Suspend (Scroll Lock),
and is available as a toolbar item.

h4. EMACS Cursor

The EMACS text editor has its own commands for moving the cursor
in the buffer.  You can choose to have your Mac arrow keys
trigger the appropriate EMACS commands.

h4. EMACS Meta

The EMACS text editor relies heavily on a key that is not
available on Mac keyboards, the meta key.  However, you can ask
MacTelnet to emulate the meta key by using other keys.

h4. Delete

Specifies what a Delete keypress on your Mac keyboard will do.
Some remote applications do not understand the default
interpretation of Delete and can respond in odd ways (such as
printing a "^H").  Choose between either regular Delete, or a
Backspace.

Note that you can temporarily choose the alternate mapping by
using shift-Delete or command-Delete in a terminal window.

Note further that MacTelnet's Macros are very flexible and could
be configured to set your own custom mapping for Delete (or many
other keys).

h4. New Line

Since some systems or applications recognize different characters
for end-of-line, you can specify how MacTelnet sends a new-line
(say, when pressing Return or pasting multi-line text).

"CF LF" means "carriage return, line feed" and sends two
characters: ASCII codes 13 and 10.

"CF NULL" means "carriage return, null character" and sends two
characters: ASCII codes 13 and 0.

h3(#sessiontek). Graphics (TEK)

MacTelnet is not only a terminal emulator, but also a display for
various kinds of images.  You can enable a vector graphics
command set for a session so that, when MacTelnet receives
certain special sequences, it will automatically render the data
as a picture instead of dumping it to the terminal screen.

h4. Command set

If you want to use vector graphics, select the command set that
indicates the kind of graphics data the session will send.
TEK 4105 is a more powerful protocol that support scrolling,
colored lines, and rotated text compared to TEK 4014.

h4. PAGE clears screen

When a new vector graphics image is created (known in TEK as a
PAGE command), it is normally put into its own window.  If you do
not want several windows and instead want MacTelnet to reuse the
same window, enable the clear-screen option.

h2(#terminals). Terminals

bq. You can create more than one set of preferences in
this category.  When you select the icon, a drawer
appears with all the collections you have.  Simply
choose a name from the list in the drawer, and then
edit that collection's settings in the main Preferences
window.

Terminals decide somewhat technical aspects of a window, such as
the emulation type.  Usually, you set up one or more of these
with the help of an administrator or application documentation,
so that MacTelnet behaves correctly when you use an application
in a terminal window.  Custom and collection Sessions can
associate a Terminal collection with them, ensuring that these
important settings are always made for you.

h3. Options

h4. General

h5. Wrap lines (no truncation)

If the cursor is at the end of a line and another character is
written, this cause the cursor to automatically wrap to the
beginning of the next line.  In addition, if this was the very
bottom line, the content scrolls up one line.  (Certain
terminal emulators may handle this slightly differently.)

If wrapping is disabled, the final character is simply
obliterated each time a new character arrives, until an
explicit new-line sequence is read or the cursor is relocated
by the application.

This sets the default for Terminal >> Line Wrap.

h5. Do not strip high bit of bytes

Specifies that the data is 8 bits instead of 7 bits.  The
MacTelnet 4.0 daily builds currently do not handle this
setting reliably.

h5. Save lines when screen clears

If an application requests a full screen clear, this causes
the entire content of the screen to first be copied into the
scrollback buffer (as if it "scrolled off the top") before
clearing the screen.

Otherwise, the screen is cleared and anything on it is lost.

This sets the default for Terminal >> Save Lines on Clear.

h4. Keyboard

h5. Normal keypad top row

Prevents the clear, =, /, and * keypad keys from being mapped
respectively to the PF1, PF2, PF3 and PF4 keys of a VT220
terminal.

h5. Local page keys

Prevents the home, end, page up and page down keys from sending
commands to the application running in the terminal; instead,
they affect the local terminal display.  Specifically, a local
"home" scrolls to the very top, an "end" scrolls to the very
bottom, a "page up" scrolls the content down by a screenful,
and a "page down" scrolls the content upward by a screenful.

h3. Emulation

h4. Base Emulator

This selects which terminal emulator implementation in MacTelnet
will be used to interpret commands (encoded as special sequences
in transmitted text).

h5. None ("Dumb")

A "dumb terminal" doesn't actually emulate anything, though it
will make sure every character it receives is visible.  For
example, the character with ASCII code 200 is printed as the
string "<200>", and ASCII code 27 prints as "^[".  This is
useful when communicating with certain kinds of servers, or
when debugging commands.

Advanced users should note that MacTelnet's Python interface
lets you customize the "pretty printing" of the dumb terminal.

h5. VT100

This is an accurate emulation of Digital Equipment Corporation's
VT100 terminal device, including its VT52 compatibility mode,
terminal LEDs, and other less common features.

h5. VT102

Largely compatible with any system that wants a VT100, this
device has additional capabilities such as print streaming.
Currently, MacTelnet's 4.0 daily builds do not completely
implement this terminal, and it may be difficult to use with
all applications that require VT102.  Using VT100 first is
recommended.

h5. VT220

Also a superset of others in the VT series such as VT100, this
device has additional capabilities like special keyboard keys.
Currently, the best way to access these features is via the
Window menu (floating key palettes), as the emulator itself is
not completely tested.

h4. Identity

A standard identifier for the terminal emulator's supported
features (sometimes called an answer-back message).

Applications may rely on this to determine if they should even
bother to send certain command sequences.  For instance, if
you identify as "vt100", an application isn't likely to send
commands that only a VT102 supports.

This name is suggested for you automatically when you choose
a Base Emulator.  Note, however, that you may still need to
change it depending on any Emulation Tweaks (below).

This should be reflected in the "TERM" environment variable
on Unix-like systems, and MacTelnet tries to set this for you.

h4. Emulation Tweaks

MacTelnet allows you to customize some of the features of its
emulators.  There are a couple of main reasons for this:

* Some applications rely on bugs in common emulators or
  the original devices, and won't work unless MacTelnet
  is also buggy.

* Certain newer terminals are supersets of older types
  (for instance, XTerm is a VT100), and can work
  "reasonably well" if popular features are supported.

Applications may ignore tweaks unless you also set the Identity
to tell them that the feature is supported.  Each tweak below
suggests an Identity that will enable it.

The tweaks currently allowed are:

h5. VT100

h6. Fix Line Wrapping Bug

Some applications have come to rely on text wrapping occurring
in an idealized way, instead of how it actually is on a VT100
device.  The typical symptom is a full-screen application that
scrolls up one line instead of occupying the whole terminal
gracefully.  A temporary work-around is to use the menu option
Terminal >> Line Wrap.  This emulation tweak is not fully
implemented.

h5. XTerm

h6. 256 Colors

Enables all 256 new XTerm colors, which includes the 16 basic
"ANSI colors" that can be customized in MacTelnet's Formats
preferences.  This allows an application to give text a specific
foreground and background color, instead of relying on terminal
defaults.

Note that this feature could significantly increase the memory
requirements for a terminal.

For this to work, your Identity may need to be "xterm-256color".

h6. Color

Enables *only* the 16 basic colors commonly called "ANSI colors",
which can be customized in MacTelnet's Formats preferences.
This allows an application to give text a specific foreground
and background color, instead of relying on terminal defaults.

For this to work, your Identity may need to be "xterm-color" or
equivalent.

h6. Graphics Characters

Enables a special set of graphics characters, such as lines and
symbols.  Note that Terminal >> Reset Graphics Characters is a
special "soft reset" that turns off only the character set, in
case an application accidentally leaves your whole window in an
unreadable state of rendering graphics!

For this to work, your Identity may need to be "xterm" or
equivalent.

h6. Window Alteration

Allows applications to change the title of your terminal window,
as well as its minimized state, position, size, and other
attributes.  This is not completely supported by MacTelnet 4.0
daily builds yet, but it will be soon.

For this to work, your Identity may need to be "xterm" or
equivalent.

h3. Screen

Screen settings determine how much text can be stored, how much
is visible, and how quickly it can be augmented.

**Note:** These settings are under evaluation and may move to
other preferences categories in the future.

h4. Width

The maximum number of columns of text (equivalent to characters,
in Western locales, when in single-width) that are stored and
visible on each line.  Currently, MacTelnet won't horizontally
scroll terminals, so this is also the display width.

If a window is reduced in size, it may internally retain the
entire original line.  A line that is made double-size will
only display half of its capacity.

h4. Height

The maximum number of _visible_ lines of text.  This refers to
normal size only; double-size lines implicitly occupy two lines
out of the buffer.

If a window is reduced in size, it may completely lose the
contents of the bottom lines that were cut off.

h4. Scrollback

It is often useful to refer back to previous text written to a
terminal, so there is an option to save it.  In addition, note
that Terminal >> Delete Entire Scrollback Buffer can be used at
any time during a session to wipe out the saved lines.

There are a few options available:

h5. Off

Does not save any lines, and therefore displays no scroll bar
in the terminal.

h5. Fixed Size

Allocates no more than the given amount.  If measured in rows,
each row might occupy as much memory as the maximum width
requires, plus space for auxiliary data (Unicode characters,
attributes, etc.).  If measured in kilobytes, divides the given
buffer size by the requirements for each character of width, so
that the buffer doesn't use any more memory.

h5. Unlimited

The scrollback size is dynamically allocated in progressively
larger chunks to keep up with demand; it is never discarded.

h5. Distributed

The specified amount of space is globally shared across all
other terminal windows that also have the Distributed setting,
and they effectively share memory.  If a terminal hasn't been
used in awhile, its oldest scrollback lines are recycled by
the windows that actually are being used.

h4. Scrolling Speed

An artificial delay imposed on the emulator's data processing
loop, to slow down the terminal.  This may help readability
for fast-moving streams, or it may just be useful for
emulating a user's slow connection to an application.

Note that there is also Terminal >> Suspend (Scroll Lock) and
the associated key equivalents, to temporarily stop a command
from displaying any more data.

h2(#formats). Formats

bq. You can create more than one set of preferences in
this category.  When you select the icon, a drawer
appears with all the collections you have.  Simply
choose a name from the list in the drawer, and then
edit that collection's settings in the main Preferences
window.

<a name="helpwithscreenformatting"></a><!-- must use this exact tag; see ExactMatch.kv -->

Formats are collections of fonts, font sizes, colors, and more,
that decide how your terminal windows look.  You can use the View
menu to change a window's format to one of the collections you
specify in Preferences, or to make customizations local to the
frontmost window.

h3. Normal

Settings that apply to all text, unless overridden by some more
specific property.

Color settings have two entries, the leftmost box is the text
(foreground) color and the rightmost box is the background color.

To edit any setting, click on a box and the standard system panel
(Fonts or Colors) will appear.

h3. ANSI Colors

Terminal applications can rely on an ANSI standard palette of
colors.  While it is a good idea to choose colors that match the
specified names, sometimes you have to change them so they don't
clash with your other customizations!

Color settings have two entries, the leftmost box is the "normal"
version and the rightmost box is the "bold" (or emphasized) one.
Ordinarily, the bold color is a slightly brighter version of the
normal color.

Feel free to experiment, "Set to the Standard Colors..." can be
clicked to restore the 16 ordinary colors.

Not all applications in terminals will make use of these colors.
In addition, a Terminal collection can disable them.

h2(#macros). Macros

bq. You can create more than one set of preferences in
this category.  When you select the icon, a drawer
appears with all the collections you have.  Simply
choose a name from the list in the drawer, and then
edit that collection's settings in the main Preferences
window.

bq. Each set in this category has an additional list
of items.  First choose a set from the drawer, then
choose an item from the numbered list, before editing.
You can also edit the names of the numbered items, as
you would for any item in the Finder.

Macro sets are completely arbitrary actions that you can bind
to almost any key combinations you wish!  In addition, you can
choose to display them in a menu (see General preferences).

Only macros from the active set, if any, are enabled.  The
active set is selected with the Map menu.  If the "None"
set is chosen, macros are disabled and the Macros menu is
temporarily hidden.

If a macro set is active, any of its macros can be used by
typing a key equivalent (the macro's main key, plus some
optional combination of modifiers).  In addition, if the
preference is set to display a Macros menu, all of the
current macros' names are shown in the menu along with their
key equivalents.

h3. Macro List

This displays the number of macros in the set (currently fixed
at 12), and their names.

The names can be edited by clicking and hovering on them, or
selecting an item and pressing Return.  Names are currently
only used in the Macros menu (if enabled).

h3. Selected Macro

To edit a macro, select it from the list and then modify its
fields in this section.  Changes take effect immediately (so,
you could test in a terminal window at the same time, provided
you made this the current macro set via the Map menu).

h4. Invoke With

The key or combination of keys that will trigger the macro
action.

If "Ordinary Key" is selected, you should type one character
into the field next to the pop-up menu to indicate which key.
For example, "K" indicates that typing the K key will activate
the macro.

Alternately, you can choose from a number of "special" keys
in the menu.

No matter which keys you choose, you have to be mindful of
what may already be in use by MacTelnet, your computer's
defaults, or the application you're going to run in the
terminal.  In general, it's not a good idea to choose very
simple key combinations.

**Important:** Whether or not you intend to use the Macros
menu, displaying it initially is recommended so that you can
see how your key equivalent will be interpreted.  Certain
combinations are "special" and will not be available to you.

h4. Modifiers

Any combination of zero to four standard modifier keys that
must be held down _in addition_ to the "Invoke With" key,
before the macro will be activated.

Modifiers are highly recommended!  Most keys are needed for
other things by default, and shouldn't invoke macros by
themselves.

h4. Action

The type of behavior the macro will trigger, and the way the
Contents will be interpreted:

h5. Open URL

The Contents are interpreted as a URL and opened locally with
whatever helper application is appropriate (such as your
preferred web browser).

h5. New Window with Command

The Contents are interpreted as a command line, split into
words (on whitespace) and run in a new terminal window.
When the command finishes, the terminal window is closed.

h5. Enter Text

The Contents will be typed into the active terminal view as if
the keyboard were used; however, any special sequences will
first be substituted with their current values.

If your macro fails to send any text, there may be errors in its
special sequences.  You can use the Console application to see
any errors that MacTelnet may have printed regarding your macro.

The possible special sequences are:

table(deftable).
(def). |_<(key). Code|_<(desc). Meaning|
(def). |<(key). @\\@|(desc)<. backslash (@\@)|
(def). |<(key). @\t@|(desc)<. horizontal tab|
(def). |<(key). @\r@|(desc)<. carriage return|
(def). |<(key). @\n@|(desc)<. line feed|
(def). |<(key). @\e@|(desc)<. escape (@^[@)|
(def). |<(key). @\0nn@|(desc)<. arbitrary ASCII in octal; e.g. "@\004@" is @^D@|
(def). |<(key). @\1nn@|(desc)<. arbitrary ASCII in octal; e.g. "@\177@" is delete|

bq. To see the octal versions of all ASCII characters,
look at <a href="x-man-page://ascii">x-man-page://ascii</a> (opens a
MacTelnet window and runs "man ascii").

For legacy reasons, you can also escape a double-quote (\"), but
this is no longer necessary.

MacTelnet also recognizes codes that represent information
to be inserted at the time a macro is actually used:

table(deftable).
(def). |<(key). @\i@|(desc)<. dynamically substitute an IP address of the computer|
(def). |<(key). @\#@|(desc)<. dynamically substitute the number of terminal lines|

Currently, there is no way to choose which IP address is actually
sent with "\i".  But you can use Window >> Show IP Addresses to
see all the IP addresses that your computer has, and drag the
desired one into a terminal window.

h5. Enter Text Verbatim

The Contents will be typed into the active terminal view as if
the keyboard were used, and *no* special sequences will be
substituted.

h2(#translations). Translations

bq. You can create more than one set of preferences in
this category.  When you select the icon, a drawer
appears with all the collections you have.  Simply
choose a name from the list in the drawer, and then
edit that collection's settings in the main Preferences
window.

A translation table essentially allows the terminal to display
text the way it is supposed to, according to what an application
in a terminal expects.

The Map menu allows you to choose among these translation
settings while sessions are running.

h3. Settings

h4. Character Set

Choose an encoding from the list to tell MacTelnet how to
interpret text while these translation settings are active.
Typically a good value is "Unicode (UTF-8)".

h4. Options

h5. Use a backup font

Unfortunately, not all fonts are the same: some of them cannot
render all possible characters.  A "backup font" allows you to
*prefer* current Format preferences for most text (perhaps
because those fonts look nicer in general), but use the backup
to handle special characters.  A Unicode font is recommended as
a backup font.

h2(#fullscreen). Full Screen

Settings that control "kiosk mode", the Full Screen command in
the MacTelnet application menu.  You can use these preferences to
create a more complete kiosk (by hiding the menu bar, for
example).

Note also the General preference (above) for removing all menu
command keys, which can also be useful for kiosks.

h3. Options

h4. Access Control

h5. Show menu bar on demand

The menu bar is hidden in Full Screen mode, but it can normally
be displayed simply by moving the mouse to the top of the screen
and pausing a moment.

If you want the menu bar to be completely unusable, disable this
option and also disable the "Menu key equivalents" option in the
General category.

h5. Show scroll bar

If your goal is to run an application in the terminal window for
visitors of a kiosk, it may be appropriate to hide the scroll bar
so that none of the "junk" normally cached in the scrollback is
accessible.

h5. Allow "Force Quit" command

To make kiosks harder to mess with, you can prevent the user from
accessing the system Force Quit function.

Note that this offers "pretty good" security, but does not guard
against all possible ways that MacTelnet could be interrupted.
For example, a background application could pop up, MacTelnet
could crash, or the user may be able to command-Tab to some other
program.

h4. Effects

h5. Superfluous graphical effects

In full screen mode, MacTelnet has significantly more screen
resolution and therefore has more options for rendering terminals
in interesting ways!  If you do not want kiosks to look much
different from normal terminal windows, disable this option.

h4. Deactivation

h5. Display an "off switch" window

If you do not want your kiosk disturbed, you may wish to remove
the floating button that appears by default.  (Full Screen can
always be disabled, but without this button it is less likely
that visitors will determine how.)

h2(#scripts). Scripts

This panel provides easy access to your Scripts Menu Items and
will make more scripting options available in the future.

</div>

<!-- ----|--------------------------------------------|----|- -->

