# GNU makefile for building the help bundle.
#
# Set MACTERM_HELP_NO_BROWSER=1 in the environment (e.g. using
# an "env" command) to suppress the automatic display of the
# generated page in a web browser.
#
# DESIGN OVERVIEW:
# - primary rules are listed first
# - patterns (foobar-%) are used for language-specific rules
# - in general, you can use the first several variables to
#   customize/filter what this will build (e.g. language set)
# - clean rules DO NOT USE RECURSIVE DELETE; this ensures that
#   every step that is done is explicitly undone (the results are
#   both safer and more robust, if painful to set up properly)
#
# Kevin Grant (kmg@mac.com)
# March 26, 2005

HIUTIL = /usr/bin/hiutil

DEST = $(CURDIR)/_Generated
MAIN_SRC = $(CURDIR)/HTMLHelp/Resources/
define MAIN_SRC_SUB
$(strip $(MAIN_SRC))/$(strip $(1))
endef
SHARED_SRC = $(CURDIR)/Shared/Resources

ALL_LANGUAGES = English
MODULES := $(filter-out index,$(sort $(notdir $(subst .textile,,$(wildcard $(strip $(MAIN_SRC))/English/*.textile)))))

APP_HELP_ROOT = $(strip $(DEST))/MacTerm.help
APP_HELP_CONTENTS_ROOT = $(APP_HELP_ROOT)/Contents
APP_HELP_RESOURCES_ROOT = $(APP_HELP_CONTENTS_ROOT)/Resources

# use these within "xyz-%" rules where the pattern is the language (e.g. English)
define APP_HELP_LOCALIZED_ROOT
$(APP_HELP_RESOURCES_ROOT)/$*.lproj
endef
define APP_HELP_LOCALIZED
$(APP_HELP_LOCALIZED_ROOT)
endef
define APP_HELP_LOCALIZED_CONTENT
$(APP_HELP_LOCALIZED)/content
endef
define APP_HELP_LOCALIZED_SEARCH_INDEX
$(APP_HELP_LOCALIZED)/search.helpindex
endef

DOCTYPER=$(CURDIR)/Tools/PrintHTMLDocType.pl
GENERATOR=$(CURDIR)/Tools/HTMLFromTextile.py
KV_TO_HEAD=$(CURDIR)/Tools/KeyValueToHTMLHeadTags.pl
KV_TO_PLIST=$(CURDIR)/Tools/KeyValueToExactMatchProperties.pl

define SOURCE_CSS_LOCALIZED_CONTENT
$(call MAIN_SRC,$(1))/default.css \
$(call MAIN_SRC,$(1))/main.css
endef

define SOURCE_HTML
$(foreach PREFIX,$(strip $(MODULES)),$(strip $(MAIN_SRC))/$(1)/$(strip $(PREFIX)).html)
endef

define SOURCE_INDEX_HTML
$(foreach PREFIX,index,$(strip $(MAIN_SRC))/$(1)/$(strip $(PREFIX)).html)
endef

define SOURCE_IMG_SHARED
$(MAIN_SRC)/HelpBookIcon.png
endef

# IMPORTANT: This list should agree with style sheets or
#            meta tags that refer to image files.
define SOURCE_IMG_LOCALIZED
$(strip $(SHARED_SRC))/SubtleBorderTop.png
endef

define SOURCE_PLIST
$(foreach PREFIX,ExactMatch,$(strip $(MAIN_SRC))/$(1)/$(strip $(PREFIX)).plist)
endef

.PHONY: all
all:
	$(begin_target)
	@echo "Building $(MODULES)"
	@# since help content is aggressively cached, blow it all away
	@# to ensure that the latest is seen by the system
	$(RM) -R ~/Library/Caches/com.apple.help.*
	$(RM) -R ~/Library/Caches/com.apple.helpd.*
	$(RM) -R ~/Library/Caches/com.apple.helpindexer.*
	$(RM) -R ~/Library/Caches/com.apple.helpviewer.*
	$(RM) -R ~/Library/Preferences/com.apple.help.*
	$(RM) -R ~/Library/Preferences/com.apple.helpd.*
	$(RM) -R ~/Library/Preferences/com.apple.helpindexer.*
	$(RM) -R ~/Library/Preferences/com.apple.helpviewer.*
	-killall helpd
	@# now build a new help book
	$(MAKE) -f $(MAKEFILE_LIST) build
ifneq ($(strip $(MACTERM_HELP_NO_BROWSER)),1)
	@# display it in a web browser
	$(call open_browser_to_page,$(APP_HELP_RESOURCES_ROOT)/English.lproj/index.html)
endif
	$(end_target)

.PHONY: clean
clean: $(foreach L,$(ALL_LANGUAGES),clean-$(L))

.PHONY: build
build: $(foreach L,$(ALL_LANGUAGES),build-$(L))

build-%:
	$(begin_target)
	install -d "$(strip $(APP_HELP_LOCALIZED))"
	$(MAKE) -f $(MAKEFILE_LIST) install-html-$*
	$(MAKE) -f $(MAKEFILE_LIST) install-plist-$*
	$(MAKE) -f $(MAKEFILE_LIST) install-index-$*
	$(MAKE) -f $(MAKEFILE_LIST) install-images-$*
	$(MAKE) -f $(MAKEFILE_LIST) install-stylesheets-$*
	$(MAKE) -f $(MAKEFILE_LIST) "$(strip $(APP_HELP_CONTENTS_ROOT))"/Info.plist
	perl -pi -e 's/LAST_UPDATED/$(shell date +"%A, %B %d, %Y, %H:%M %Z")/' \
		"$(strip $(APP_HELP_LOCALIZED))/index.html"
	$(end_target)

install-html-%: $(call SOURCE_HTML,%) $(call SOURCE_INDEX_HTML,%)
	install -d "$(strip $(APP_HELP_LOCALIZED_CONTENT))/"
	cp $(call SOURCE_HTML,$*) "$(strip $(APP_HELP_LOCALIZED_CONTENT))/"
	cp $(call SOURCE_INDEX_HTML,$*) "$(strip $(APP_HELP_LOCALIZED))/"

clean-install-html-%:
	$(RM) $(foreach PAGE,$(notdir $(call SOURCE_HTML,$*)),"$(strip $(APP_HELP_LOCALIZED_CONTENT))/$(PAGE)")
	$(RM) $(foreach PAGE,$(notdir $(call SOURCE_INDEX_HTML,$*)),"$(strip $(APP_HELP_LOCALIZED))/$(PAGE)")
	-rmdir "$(strip $(APP_HELP_LOCALIZED_CONTENT))"
	$(RM) $(call SOURCE_HTML,$*)
	$(RM) $(call SOURCE_INDEX_HTML,$*)

install-images-%:
	cp $(SOURCE_IMG_SHARED) "$(strip $(APP_HELP_RESOURCES_ROOT))/"
	cp $(SOURCE_IMG_LOCALIZED) "$(strip $(APP_HELP_LOCALIZED_CONTENT))/"

clean-install-images-%:
	$(RM) $(foreach IMG,$(notdir $(SOURCE_IMG_SHARED)),"$(strip $(APP_HELP_RESOURCES_ROOT))/$(IMG)")
	$(RM) $(foreach IMG,$(notdir $(SOURCE_IMG_LOCALIZED)),"$(strip $(APP_HELP_LOCALIZED_CONTENT))/$(IMG)")

install-plist-%: $(call SOURCE_PLIST,%)
	cp $(call SOURCE_PLIST,$*) "$(strip $(APP_HELP_LOCALIZED))/"

clean-install-plist-%:
	$(RM) $(foreach PLIST,$(notdir $(call SOURCE_PLIST,$*)),"$(strip $(APP_HELP_LOCALIZED))/$(PLIST)")

install-stylesheets-%:
	cp $(call SOURCE_CSS_LOCALIZED_CONTENT,$*) "$(strip $(APP_HELP_LOCALIZED_CONTENT))/"

clean-install-stylesheets-%:
	$(RM) $(foreach CSS,$(notdir $(call SOURCE_CSS_LOCALIZED_CONTENT,$*)),"$(strip $(APP_HELP_LOCALIZED_CONTENT))/$(CSS)")

install-index-%:
	$(MAKE) -f $(MAKEFILE_LIST) $(APP_HELP_LOCALIZED_SEARCH_INDEX)

clean-install-index-%:
	$(RM) "$(strip $(APP_HELP_LOCALIZED_SEARCH_INDEX))"

clean-%: clean-install-images-% clean-install-stylesheets-% clean-install-plist-% clean-install-html-% clean-install-index-%
	$(begin_target)
	-rm "$(strip $(APP_HELP_CONTENTS_ROOT))"/Info.plist
	-rmdir "$(strip $(APP_HELP_LOCALIZED_ROOT))"
	-rmdir "$(strip $(APP_HELP_RESOURCES_ROOT))"
	-rmdir "$(strip $(APP_HELP_CONTENTS_ROOT))"
	-rmdir "$(strip $(APP_HELP_ROOT))"
	$(end_target)

# "make" considers the HTML files intermediates normally,
# and would delete them if not for this .SECONDARY statement
# (this line ensures HTML files are only rebuilt if their
# original input files change)
.SECONDARY: $(foreach L,$(ALL_LANGUAGES),$(call SOURCE_HTML,$(L)) $(call SOURCE_INDEX_HTML,$(L)))

%.lproj/index.html: %/index.kv %/index.textile
	$(begin_target)
	$(DOCTYPER) XHTML1.0-UTF-8 >| $@
	echo "<html xmlns=\"http://www.w3.org/1999/xhtml\"><head>" >> $@
	$(KV_TO_HEAD) -xml $*/index.kv >> $@
	echo "</head><body>" >> $@
	$(GENERATOR) $*/index.textile | sed 's/\>\>/\&gt;\&gt;/g' >> $@
	echo "</body></html>" >> $@
	echo >> $@
	$(end_target)

%.html: $(strip $(MAIN_SRC))/base.kv %.kv %.textile
	$(begin_target)
	$(DOCTYPER) XHTML1.0-UTF-8 >| $@
	echo "<html xmlns=\"http://www.w3.org/1999/xhtml\"><head>" >> $@
	@# Apple's tools will not parse the title tag correctly unless it
	@# appears early in the file; therefore, a "title:" key must be
	@# extracted and handled first even if it would otherwise have
	@# been placed on a later line of the generated HTML file
	grep title: $*.kv | $(KV_TO_HEAD) -xml >> $@
	$(KV_TO_HEAD) -xml $< >> $@
	grep -v title: $*.kv | $(KV_TO_HEAD) -xml >> $@
	echo "</head><body>" >> $@
	$(GENERATOR) $*.textile | sed 's/\>\>/\&gt;\&gt;/g' >> $@
	echo "</body></html>" >> $@
	echo >> $@
	$(end_target)

$(MAIN_SRC)/%/ExactMatch.plist: $(MAIN_SRC)/%/ExactMatch.kv
	$(begin_target)
	$(KV_TO_PLIST) $< > $@
	$(end_target)

$(APP_HELP_CONTENTS_ROOT)/Info.plist: $(MAIN_SRC)/Template-Info.plist
	cp $(MAIN_SRC)/Template-Info.plist $@
	env BUILT_PRODUCTS_DIR="$(APP_HELP_CONTENTS_ROOT)" INFOPLIST_PATH=Info.plist \
		$(CURDIR)/VersionInfo.sh $(CURDIR)/Tools/AutoDatePropertyList.sh

%.lproj/search.helpindex: $(foreach L,$(ALL_LANGUAGES),$(call SOURCE_HTML,$(L)))
	$(HIUTIL) --verbose --verbose --verbose -1 --create --anchors --exclude '\.css$$' --exclude '\.png$$' --file "$@" "$(dir $@)"
	@# as of macOS Mojave, these steps will NOT work due to a vague error
	@# opening the file (furthermore, the same errors seem to occur even
	@# when trying to open help index files from Apple apps!); for now,
	@# ignoring the return codes for these to prevent build failure but
	@# it would be nice to fix eventually
	-$(HIUTIL) --verbose -1 --list-anchors --file "$@"
	-$(HIUTIL) --verbose -1 --list-files --file "$@"

define begin_target
	@date "+      $(notdir $@): Started at %T."
endef

define end_target
	@date "+Finished $(notdir $@)."
endef

define open_browser_to_page
	open "file://$(strip $(1))"
endef

